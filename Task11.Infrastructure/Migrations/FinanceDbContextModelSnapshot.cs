// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task11.Infrastructure.Persistence;

#nullable disable

namespace Task11.Presentation.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    partial class FinanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task11.Domain.ExpenseFinanceOperationAggregate.ExpenseFinanceOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("ExpenseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseTypeId");

                    b.ToTable("ExpenseFinanceOperations", (string)null);
                });

            modelBuilder.Entity("Task11.Domain.ExpenseType.ExpenseType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes", (string)null);
                });

            modelBuilder.Entity("Task11.Domain.IncomeFinanceOperationAggregate.IncomeFinanceOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("IncomeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IncomeTypeId");

                    b.ToTable("IncomeFinanceOperations", (string)null);
                });

            modelBuilder.Entity("Task11.Domain.IncomeType.IncomeType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes", (string)null);
                });

            modelBuilder.Entity("Task11.Domain.ExpenseFinanceOperationAggregate.ExpenseFinanceOperation", b =>
                {
                    b.HasOne("Task11.Domain.ExpenseType.ExpenseType", null)
                        .WithMany()
                        .HasForeignKey("ExpenseTypeId");
                });

            modelBuilder.Entity("Task11.Domain.IncomeFinanceOperationAggregate.IncomeFinanceOperation", b =>
                {
                    b.HasOne("Task11.Domain.IncomeType.IncomeType", null)
                        .WithMany()
                        .HasForeignKey("IncomeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
